{"version":3,"sources":["cmoutput.js","inserts/webtts.js","inserts/mcp.js","inserts/triggers.js","inserts/programmerhelper.js","insertfactory.js","channelhistory.js","channelinterface.js","soundops.js","soundplayer.js","programmer.js","tts.js","interface.js","chatmud.js","tcp.js","main.js"],"names":[],"mappingshzllEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA,ADsBA;ACrBA,ADsBA;ACrBA,ADsBA;ACrBA,ADsBA;ACrBA,ADsBA;ACrBA,ADsBA;ACrBA,ADsBA;ACrBA,ADsBA;ACrBA,ADsBA;ACrBA,ADsBA;ACrBA,ADsBA;ACrBA,ADsBA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AD/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AEVA;AFWA,AEVA;AFWA,AEVA;AFWA,AEVA;AFWA,AEVA;AFWA,AEVA;AFWA,AEVA;AFWA,AEVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AHntlEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.map","sourcesContent":["'use strict';\nclass CMOutput {\n\tconstructor(domNode, instance) {\n\t\tthis.instance = instance;\n\t\tthis.domNode = domNode;\n\t\tthis.maxLines = 100;\n\t}\n\n\tadd(string) {\n\t\tthis.instance.tts.speak(string);\n\t\tconst paragraph = document.createElement('p');\n\t\tconst text = document.createTextNode(string);\n\t\tparagraph.appendChild(text);\n\t\tthis.domNode.appendChild(paragraph);\n\t\tthis.checkScreen();\n\t}\n\n\tcheckScreen() {\n\t\tif (this.domNode.childNodes.length > this.maxLines) {\n\t\t\t// This.domNode.removeChild(this.domNode.firstChild);\n\t\t}\n\t}\n}\n\nmodule.exports = CMOutput;\n","'use strict';\n\nclass WebTTS {\n\tconstructor() {\n\t\tthis.interface = null;\n\t}\n\t\n\tact(string, instance) {\n\t\tthis.instance = instance;\n\t\tconsole.log(document.getElementById(\"speechToggle\").value)\n\t\tthis.instance.tts.speak(string);\n\t\treturn string;\n\t}\n\t\n\n\t\n}\n\nmodule.exports = WebTTS;","'use strict';\nclass MCP {\n\tconstructor() {\n\t\tthis.instance = null;\n\t\tthis.key = 0;\n\t\tthis.name = 0;\n\t}\n\t\n\tact(string, instance) {\n\t\tstring = string.toString();\n\t\tif (!string.startsWith(\"#$#\")) {\n\t\t\treturn string;\n\t\t}\n\t\t\n\n\t\tthis.instance = instance;\n\t\tthis.parse(string);\n\t\treturn \"\";\n\t}\n\t\n\tparse(string) {\n\t\tconsole.log(\"Parsing \" + string);\n\t\tlet s1 = string.slice(3, string.length);\n\t\ts1 = s1.trim();\n\t\tlet command = s1.slice(0, s1.indexOf(\" \"));\n\t\t\n\t\tcommand = command.trim();\n\t\tconsole.log(\"Command: \" + command);\n\t\ts1 = s1.slice(command.length, s1.length);\n\t\tlet key = null;\n\t\tif (s1.includes(\"-|-\")) {\n\t\tkey = s1.slice(s1.indexOf(\"-|-\")+4, s1.length);\n\t\tkey = key.trim();\n\t\t\t\ts1 = s1.slice(0, s1.indexOf(\"-|-\"));\n\t\t}\n\t\t\n\n\t\tlet s2 = s1.split(\"|\");\n\t\tfor (let i=0;i<s2.length;i++) {\n\t\t\ts2[i] = s2[i].trim();\n\t\t}\n\t\n\t\t\n\t\tif (command == \"mcp\") {\n\t\t\tthis.initMCP();\n\t\t}\n\t\t\n\t\tthis.executeMCP(command, s2, key);\n\t}\n\t\n\tinitMCP() {\n\t\tthis.instance.connection.send(\"#$#register_client Chatmud Official Client (Alpha)\");\n\t\tthis.instance.connection.send(\"#$#client_supports authkeys\");\n\t}\n\t\n\texecuteMCP(command, args, key) {\n\t\tif (key) {\n\t\t\tthis.checkKey(key);\n\t\t}\n\t\t\n\t\tswitch (command) {\n\t\t\tcase \"authentication_key\":\n\t\t\tthis.key = args[0];\n\t\t\tbreak;\n\t\t\tcase \"my_name\":\n\t\t\tthis.name = args[0];\n\t\t\tbreak;\n\t\t\tcase \"channel_message\":\n\t\t\tthis.handleChannelMessage(args);\n\t\t\tbreak;\n\t\t\tcase \"channel_social\":\n\t\t\tthis.handleChannelSocial(args);\n\t\t\tbreak;\n\t\t\tcase \"social\":\n\t\t\tthis.handleSocial(args);\n\t\t\tbreak;\n\n\t\t\tcase \"watched_player_connect\":\n\t\t\tthis.handlePlayerConnect(args);\n\t\t\tbreak\n\t\t\tcase \"watched_player_reconnect\":\n\t\t\tthis.handlePlayerReconnect(args);\n\t\t\tbreak;\n\t\t\tcase \"watched_player_disconnect\":\n\t\t\tthis.handlePlayerDisconnect(args);\n\t\t\tbreak;\n\t\t\tcase \"teleport_out\":\n\t\t\tthis.handlePlayerTeleportOut(args);\n\t\t\tbreak;\n\t\t\tcase \"teleport_in\":\n\t\t\tthis.handlePlayerTeleportIn(args);\n\t\t\tbreak;\n\t\t\tcase \"tell_message\":\n\t\t\tthis.handleTell(args);\n\t\t\tbreak;\n\t\t\tcase \"edit\":\n\t\t\tthis.handleEdit(args);\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\tthis.handlePlay(command, args);\n\t\t\tbreak;\n\t\t}\n\t\t\n\t}\n\t\n\thandleChannelMessage(args) {\n\t\tthis.instance.history.addMessage(args[0], args[2]+args[3]);\n\t\tthis.instance.output.add(args[2]+\" \"+args[3]);\n\t\tthis.instance.soundPlayer.playChannel(args[0]);\n\t}\n\t\n\thandleChannelSocial(args) {\n\t\tconsole.log(JSON.stringify(args));\n\t\tthis.instance.history.addMessage(args[0], args[0]+ + \": \" + args[3]);\n\t\tthis.instance.output.add(args[0]+\": \"+args[3]);\n\t\tthis.instance.soundPlayer.playSocial(args[2], args[5]);\n\t\tthis.instance.soundPlayer.playChannel(args[0]);\n\t}\n\t\n\thandleSocial(args) {\n\t\tthis.instance.soundPlayer.playSocial(args[0], args[2]);\n\t}\n\t\n\thandlePlay(command, args) {\n\t\tthis.instance.soundPlayer.play(args[0], command);\n\t}\n\t\n\thandlePlayerConnect(args) {\n\t\tthis.instance.soundPlayer.play(\"enter\");\n\t\tthis.instance.output.add(args[0] + \" connected\");\n\t}\n\t\n\thandlePlayerReconnect(args) {\n\t\tthis.instance.soundPlayer.play(\"reconnect\");\n\t\tthis.instance.output.add(args[0] + \" reconnected\");\n\t}\n\t\n\thandlePlayerDisconnect(args) {\n\t\tthis.instance.soundPlayer.play(\"leave\");\n\t\tthis.instance.output.add(args[0] + \" disconnected\");\n\t}\n\t\n\thandlePlayerTeleportOut(args) {\n\t\tthis.instance.soundPlayer.play(\"teleport%20out\", \"misc\");\n\t}\n\t\n\thandlePlayerTeleportIn(args) {\n\t\tthis.instance.soundPlayer.play(\"teleport%20in\", \"misc\");\n\t}\n\t\n\thandleTell(args) {\n\t\tconsole.log(\"Parsed tell: \" + args);\n\t\tthis.instance.soundPlayer.play(\"tell\");\n\t\tthis.instance.output.add(args[0]+ \" \" + args[1] + \" \" + args[2]);\n\t}\n\t\n\thandleEdit(args) {\n\t\t\tlet args2 = args[0].split(\" \");\n\t\t\t// console.log(\"Split args: \" + JSON.stringify(args2));\n\t\t\t// let verb = args2[1].split(\":\")[1];\n\t\t\t// let object = args2[4].split(\":\")[0];\n\t\tthis.instance.programmer.setObject(args2[args2.length-1]);\n\t\tthis.instance.programmer.setEnableHelper(true);\n\t}\n\t\n\tcheckKey(key) {\n\t\tconsole.log(\"Checking \" + key + \" agains \" + this.key);\n\t\tif (key != this.key) {\n\t\t\tthis.instance.soundPlayer.play(\"spoofer\", \"misc\");\n\t\t\tthis.instance.output.add(\"Spoof attempt!\");\n\t\t}\n\t\t\n\t}\n\t\n}\n\nmodule.exports = MCP;","'use strict';\n\nclass Triggers {\n\tconstructor() {\n\t\tthis.instance = null;\n\t}\n\t\n\tact(string, instance) {\n\t\tthis.instance = instance;\n\t\tthis.executeTriggers(string);\n\t\treturn string;\n\t}\n\t\n\texecuteTriggers(string) {\n\t\tlet matched = string.match(\"^Turning (off|on) channel ([a-zA-Z0-9]*)?\\.\");\n\t\tif (matched) {\n\t\t\tthis.instance.soundPlayer.play(matched[1]);\n\t\t}\n\t\t\n\t\tmatched = string.match(\"^I don't understand that\\.$\");\n\t\tif (matched) {\n\t\t\tthis.instance.soundPlayer.play(\"huh\", \"misc\");\n\t\t}\n\t\t\n\t\tmatched = string.match(\"^(\\>\\> Command Aborted \\<\\<|Invalid selection.)$\");\n\t\tif (matched) {\n\t\t\tthis.instance.soundPlayer.play(\"cancel\");\n\t\t}\n\t\t\n\t\tmatched = string.match(\"(\\\\[(Type a line of input or `@abort' to abort the command|Type lines of input; use `\\\\.' to end or `@abort' to abort the command)\\\\.\\\\]|\\\\[Enter `yes' or `no'\\\\])\");\n\t\tif (matched) {\n\t\t\tthis.instance.soundPlayer.play(\"prompt\");\n\t\t}\n\t\t\n\t\tmatched = string.match(\"You click your heels three times.\");\n\t\tif (matched) {\n\t\t\tthis.instance.soundPlayer.play(\"home\", \"misc\");\n\t\t\t\n\t\t}\n\t\t\n\t\tmatched = string.match(\"[Connections] A new high player count has been reached! * players are connected.\");\n\t\tif (matched) {\n\t\t\tthis.instance.soundPlayer.play(\"high%connections\", \"misc\");\n\t\t}\n\t\t\n\t\tmatched = string.match(\"[Creation] * has just connected for the first time! Please make them feel welcome.\");\n\t\tif (matched) {\n\t\t\tthis.instance.soundPlayer.play(\"creation\");\n\t\t}\n\t\t\n\t\tmatched = string.match(\"(.*) says,(.*)\");\n\t\tif (matched) {\n\t\t\tthis.instance.soundPlayer.play(\"say\");\n\t\t}\n\t\t\n\t\tmatched = string.match(\"^You say,*?\");\n\t\tif (matched) {\n\t\t\tthis.instance.soundPlayer.play(\"say\");\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}\n\nmodule.exports = Triggers;","class ProgrammerHelper {\n\tconstructor() {\n\t\tthis.code = \"\";\n\t\tthis.receiving = false;\n\t\tthis.instance = null;\n\t}\n\t\n\tact(string, instance) {\n\t\tif (instance.programmer.enabled == true) {\n\t\t\tif (this.receiving == false) {\n\t\t\t\tthis.receiving = true;\n\t\t\t\tthis.code = \"\";\n\t\t\t}\n\t\t\t\n\t\t\t\t\tthis.instance = instance;\n\t\t\t\t\tconsole.log(\"Checking: \" + string);\n\t\tif (string == \".\") {\n\t\t\tthis.instance.programmer.setCode(this.code);\n\t\t\tthis.instance.programmer.open();\n\t\t\tthis.instance.programmer.setEnableHelper(false);\n\t\t\tthis.receiving = false;\n\t\t}\n\t\tthis.code += string + \"\\n\";\n\t\treturn \"\";\n\t\t} else {\n\t\t\treturn string;\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}\n\nmodule.exports = ProgrammerHelper;","'use strict';\nconst webtts = require('./inserts/webtts');\nconst mcp = require('./inserts/mcp');\nconst triggers = require('./inserts/triggers');\nconst programmerhelper = require('./inserts/programmerhelper');\n\nclass InsertFactory {\n\tstatic getInsert(name) {\n\t\tswitch (name) {\n\t\t\tcase 'webtts':\n\t\t\t\treturn webtts;\n\t\t\t\tbreak;\n\t\t\tcase 'mcp':\n\t\t\t\treturn mcp;\n\t\t\t\tbreak;\n\t\t\tcase 'triggers':\n\t\t\t\treturn triggers;\n\t\t\t\tbreak;\n\t\t\tcase 'programmerhelper':\n\t\t\t\treturn programmerhelper;\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nmodule.exports = InsertFactory;\n","'use strict';\nclass ChannelHistory {\n\tconstructor() {\n\t\tthis.channels = new Array();\n\t}\n\n\taddMessage(pChannel, message) {\n\t\tconsole.log('Adding to ' + pChannel + ', ' + message);\n\t\tlet channel = this.getChannelByName(pChannel);\n\t\tif (channel == -1) {\n\t\t\tchannel = new Channel(pChannel);\n\t\t\tthis.channels.push(channel);\n\t\t\tconsole.log('Created new channel');\n\t\t}\n\t\tchannel.addMessage(message);\n\t}\n\n\tgetChannelByName(name) {\n\t\tconsole.log('Getting channel by name ' + name);\n\t\tfor (const channel of this.channels) {\n\t\t\tif (channel.name == name) {\n\t\t\t\treturn channel;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tgetMessageForChannel(name, id) {\n\t\tconsole.log('Getting message ' + id + ' for channel ' + name);\n\t\tconst channel = this.getChannelByName(name);\n\t\treturn channel.messages[id];\n\t}\n}\n\nclass Channel {\n\tconstructor(name) {\n\t\tthis.name = name;\n\t\tthis.messages = new Array();\n\t}\n\n\taddMessage(message) {\n\t\tconsole.log('In-channel message add: ' + message);\n\t\tthis.messages.unshift(message);\n\t}\n}\n\nmodule.exports = ChannelHistory;\n","'use strict';\nconst ChannelHistory = require('./channelhistory');\nconst Combokeys = require('combokeys');\n\nclass ChannelInterface {\n\tconstructor(history, instance) {\n\t\tthis.instance = instance;\n\t\tthis.currentChannel = 0;\n\t\tthis.currentMessage = 0;\n\t\tthis.history = history;\n\t\tthis.shortcuts = new Combokeys(window);\n\t\tthis.setupKeys();\n\t}\n\n\tnextChannel() {\n\t\tconsole.log('Next channel');\n\t\tif (this.currentChannel < this.history.channels.length - 1) {\n\t\t\tthis.currentChannel++;\n\t\t} else {\n\t\t\tthis.currentChannel = this.history.channels.length - 1;\n\t\t}\n\n\t\tthis.instance.tts.speakImmediate(this.history.channels[this.currentChannel].name);\n\t}\n\n\tpreviousChannel() {\n\t\tconsole.log('Previous channel');\n\t\tif (this.currentChannel > 0) {\n\t\t\tthis.currentChannel--;\n\t\t} else {\n\t\t\tthis.currentChannel = 0;\n\t\t}\n\n\t\t\t\tthis.instance.tts.speakImmediate(this.history.channels[this.currentChannel].name);\n\t}\n\n\tnextMessage() {\n\t\tconsole.log('Next message');\n\t\tif (this.currentMessage > 0) {\n\t\t\tthis.currentMessage--;\n\t\t} else {\n\t\t\tthis.currentMessage = 0;\n\t\t}\n\n\t\tthis.readMessage(this.currentMessage);\n\t}\n\n\tpreviousMessage() {\n\t\tconsole.log('Previous message');\n\t\tif (this.currentMessage < this.history.channels[this.currentChannel].messages.length - 1) {\n\t\t\tthis.currentMessage++;\n\t\t} else {\n\t\t\tthis.currentMessage = this.history.channels[this.currentChannel].messages.length - 1;\n\t\t}\n\n\t\tthis.readMessage(this.currentMessage);\n\t}\n\n\treadMessage(id) {\n\t\tconsole.log('Reading ' + this.history.channels[this.currentChannel].messages[id]);\n\t\tthis.instance.tts.speakImmediate(this.history.channels[this.currentChannel].messages[id]);\n\t}\n\n\tsetupKeys() {\n\t\tif (process.platform === 'win32') {\n\t\t\tthis.shortcuts.bind('alt+left', () => this.previousChannel());\n\t\t\tthis.shortcuts.bind('alt+right', () => this.nextChannel());\n\t\t\tthis.shortcuts.bind('alt+up', () => this.previousMessage());\n\t\t\tthis.shortcuts.bind('alt+down', () => this.nextMessage());\n\t\t} else {\n\t\t\tthis.shortcuts.bind('alt+meta+left', () => this.previousChannel());\n\t\t\tthis.shortcuts.bind('alt+meta+right', () => this.nextChannel());\n\t\t\tthis.shortcuts.bind('alt+meta+up', () => this.previousMessage());\n\t\t\tthis.shortcuts.bind('alt+meta+down', () => this.nextMessage());\n\t\t}\n\t}\n}\n\nmodule.exports = ChannelInterface;\n","const sounds = require('./sounds');\n\nfunction findSoundsInFolder(path) {\n\tconst split = path.split('/');\n\tlet directory = sounds;\n\tfor (const string of split) {\n\t\tdirectory = search(string, directory);\n\t}\n\treturn directory;\n}\n\nfunction search(string, object) {\n\tfor (const entry of object) {\n\t\tif (entry.name == string) {\n\t\t\treturn entry.children;\n\t\t}\n\t}\n}\n\nfunction findFilenames(string, array) {\n\tconst returnObj = [];\n\tfor (const entry of array) {\n\t\tif (entry.name.includes(string)) {\nreturnObj.push(entry.name);\n\t\t}\n\t}\n\treturn returnObj;\n}\n\nmodule.exports.findSoundsInFolder = findSoundsInFolder;\nmodule.exports.findFilenames = findFilenames;\n","const {Howl, Howler} = require('howler');\nconst soundops = require('./soundops');\nconst rng = require('random-int');\nconst Sounds = require('./sounds');\n\nclass SoundPlayer {\n\tconstructor() {\n\t\tthis.sounds = new Array();\n\t\tthis.extension = '.ogg';\n\t}\n\n\tplay(file, folder = '') {\n\t\tlet mFile = this.searchSounds(file, folder);\n\t\tif (mFile == -1) {\n\t\t\tmFile = this.loadSound(file, folder);\n\t\t}\n\t\tmFile.sound.play();\n\t}\n\n\tplayChannel(name) {\n\t\tconst channels = soundops.findSoundsInFolder('channels');\n\t\tconst foundChannels = soundops.findFilenames(name, channels);\n\t\tname = (foundChannels.length == 0 ? 'global' : name);\n\t\tthis.play(name, 'channels');\n\t}\n\n\tplaySocial(name, gender) {\n\t\tconst socials = soundops.findSoundsInFolder('socials');\n\t\tlet foundSocials = soundops.findFilenames(name + ' ' + gender, socials);\n\t\tif (foundSocials.length == 0) {\n\t\t\tfoundSocials = soundops.findFilenames(name, socials);\n\t\t}\n\t\tlet filename = foundSocials[rng(0, foundSocials.length - 1)].toString();\n\t\tfilename = filename.slice(0, filename.length - 4);\n\t\tthis.play(filename, 'socials');\n\t}\n\n\tsearchSounds(file, folder) {\n\t\tfor (const sound of this.sounds) {\n\t\t\tif (sound.file == file && sound.folder == folder) {\n\t\t\t\treturn sound;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tloadSound(file, folder) {\n\t\tconst sound = new Sound(folder, file);\n\t\tthis.sounds.push(sound);\n\t\treturn sound;\n\t}\n}\n\nclass Sound {\n\tconstructor(folder, file) {\n\t\tthis.basePath = './sounds/';\n\t\tthis.file = file;\n\t\tthis.folder = folder;\n\t\tthis.extension = '.ogg';\n\t\tthis.path = this.basePath + this.folder + '/' + this.file + this.extension;\n\n\t\tconsole.log('Loading ' + this.path);\n\t\tthis.sound = new Howl({src: this.path});\n\t}\n}\n\nmodule.exports = SoundPlayer;\n","'use strict';\n\nclass Programmer {\n\tconstructor(instance) {\n\t\tthis.instance = instance;\n\t\tthis.code = '';\n\t\tthis.object = '';\n\t\tthis.enabled = false;\n\t\tthis.window = null;\n\t\tthis.lines = new Array();\n\t\tthis.currentLine = 0;\n\t}\n\n\tsetEnableHelper(value) {\n\t\tthis.enabled = value;\n\t}\n\n\tsetCode(code) {\n\t\tthis.code = code;\n\t\tconsole.log('Code: ' + this.code);\n\t}\n\n\topen() {\n\t\tthis.window = window.open('./editor.html');\n\t\tsetTimeout(() => {\n\t\t\tthis.window.postMessage(this.code);\n\t\t}, 1000);\n\n\t\twindow.addEventListener('message', this.handleMessage.bind(this));\n\t}\n\n\thandleMessage(data) {\n\t\tconst code = data.data;\n\t\t\t\t\tthis.sendCode(code);\n\t\t\t\t\twindow.removeEventListener('message', this.handleMessage.bind(this), true);\n\t}\n\n\tsendCode(data) {\n\t\tconst lines = data.split('\\n');\n\t\tthis.lines = lines;\n\t\tthis.instance.connection.send('@program ' + this.object);\n\t\tfor (const line of lines) {\n\t\t\t\tthis.instance.connection.send(line);\n\t\t}\n\t\t\tthis.instance.connection.send('.');\n\t\t\tthis.code = '';\n\t\t\tthis.enabled = false;\n\t}\n\n\tsetObject(obj) {\n\t\tconsole.log('Object set to ' + this.object);\n\t\tthis.object = obj;\n\t}\n}\n\nmodule.exports = Programmer;\n","const say = require('say');\nconst Combokeys = require('combokeys');\n\nclass TTS {\n\tconstructor() {\n\t\tthis.speaking = false;\n\t\tthis.speakQueue = new Array();\n\t\tthis.voice = 'alex';\n\t\tthis.rate = 3.0;\n\t\tthis.combokeys = new Combokeys(window);\n\t\tthis.combokeys.bind('ctrl', () => this.stopSpeech());\n\t}\n\n\tstopSpeech() {\n\t\tif (this.speaking == true) {\n\t\t\tthis.speaking = false;\n\t\t\tthis.speakQueue = [];\n\t\t\tsay.stop();\n\t\t}\n\t}\n\n\tspeakImmediate(string) {\n\t\tif (this.speaking == true) {\n\t\t\tthis.stopSpeech();\n\t\t}\n\t\t\t\t\tthis.speak(string);\n\t}\n\n\tspeak(string) {\n\t\tconsole.log(document.getElementById('speechToggle').value);\n\t\tif (!document.getElementById('speechToggle').checked) {\n\t\t\treturn;\n\t\t}\n\t\tstring = string.replace('[', ' ');\n\t\tstring = string.replace(']', ' ');\n\tconsole.log('saying ' + string);\n\tthis.speakQueue.push(string);\n\tif (this.speaking == false) {\n\tthis.handleQueue();\n\tthis.speaking = true;\n\t}\n\t}\n\n\thandleQueue() {\n\t\tif (this.speakQueue.length > 0) {\n\t\t\tconst string = this.speakQueue.shift();\n\t\t\tsay.speak(string, this.voice, this.rate, err => this.handleQueue());\n\t\t} else {\n\t\t\tthis.speaking = false;\n\t\t}\n\t}\n}\n\nmodule.exports = TTS;\n","class Interface {\n\tconstructor(instance) {\n\t\tthis.instance = instance;\n\t\tconst audioOptsToggle = document.getElementById('audioOptsToggle');\n\t\tconst audioOpts = document.getElementById('audioOpts');\n\t\taudioOptsToggle.addEventListener('click', () => {\n\t\t\taudioOptsToggle.setAttribute('aria-expanded', (audioOptsToggle.getAttribute('aria-expanded') == 'false' ? 'true' : 'false'));\n\t\t\taudioOpts.style.display = (audioOpts.style.display == 'none' ? '' : 'none');\n\t\t});\n\t\tdocument.getElementById('soundVolume').addEventListener('change', event => {\n\t\t\tconsole.log('Set volume to ' + event.target.value + ' percent');\n\t\t\tHowler.volume(Number(event.target.value) / 100);\n\t\t});\n\t}\n}\n\nmodule.exports = Interface;\n","'use strict';\nconst CMOutput = require('./cmoutput');\nconst Inserts = require('./inserts.json');\nconst InsertFactory = require('./insertfactory');\nconst ChannelHistory = require('./channelhistory');\nconst ChannelInterface = require('./channelinterface');\nconst SoundPlayer = require('./soundplayer');\nconst Programmer = require('./programmer');\nconst TTS = require('./tts');\nconst Interface = require('./interface');\n\nclass ChatMud {\n\tconstructor(connection) {\n\t\tconsole.log('Constructing handler');\n\t\tthis.input = document.getElementById('cm-input');\n\t\tthis.output = new CMOutput(document.getElementById('cm-output'), this);\n\t\tthis.connection = connection;\n\t\tthis.inserts = new Array();\n\t\tthis.history = new ChannelHistory();\n\t\tthis.historyInterface = new ChannelInterface(this.history, this);\n\t\tthis.soundPlayer = new SoundPlayer();\n\t\tthis.tts = new TTS();\n\t\tthis.interface = new Interface(this);\n\t\tthis.programmer = new Programmer(this);\n\t\tthis.setupEvents();\n\t\tthis.setupInserts();\n\t}\n\n\tsetupEvents() {\n\t\tconsole.log('Setting events');\n\t\tthis.connection.on('data', data => this.handleData(data));\n\t\tthis.input.addEventListener('keyup', event => {\n\t\t\tif (event.keyCode == 13) {\n\t\t\t\tthis.tts.stopSpeech();\n\t\t\t\tthis.sendInput();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetupInserts() {\n\t\tfor (const insertDef of Inserts) {\n\t\t\tconst insert = InsertFactory.getInsert(insertDef);\n\t\t\tconst instance = new insert();\n\t\t\tthis.inserts.push(instance);\n\t\t}\n\t}\n\n\thandleData(data) {\n\t\t\tconsole.log('Received data: ' + data);\n\t\t\tfor (const insert of this.inserts) {\n\t\t\t\tdata = insert.act(data, this);\n\t\t\t}\n\n\t\t\tthis.output.add(data);\n\t}\n\n\tsendInput() {\n\t\tconsole.log('Handle enter key');\n\n\t\tconst string = this.input.value;\n\t\tthis.connection.send(string);\n\t\tthis.input.value = '';\n\t}\n}\n\nmodule.exports = ChatMud;\n","'use strict';\nconst net = require('net');\nconst EventEmitter = require('eventemitter3');\n\nclass TCPConnection extends EventEmitter {\n\tconstructor(address = 'chatmud.com', port = 3000) {\n\t\tconsole.log('Connecting to ' + address + ' on port ' + port);\n\t\tsuper();\n\t\tthis.address = address;\n\t\tthis.port = port;\n\t\tthis.client = new net.Socket();\n\t\tthis.connection = this.client.connect(this.port, this.address, () => this.setupEvents());\n\t}\n\n\tsetupEvents() {\n\t\tconsole.log('Setting up tcp events');\n\t\tthis.client.on('data', data => this.handleData(data));\n\t}\n\n\thandleData(data) {\n\t\tconsole.log('TCP stream: ' + data);\n\t\tconst string = data.toString();\n\t\tconst arr = string.split('\\r\\n');\n\t\tfor (const i of arr) {\n\t\tthis.emit('data', i);\n\t\t}\n\t}\n\n\tsend(string) {\n\t\tconsole.log('Sending ' + string);\n\t\tthis.client.write(string + '\\n');\n\t}\n}\n\nmodule.exports = TCPConnection;\n","'use strict';\nconst ChatMud = require('./chatmud.js');\nconst TCPConnection = require('./tcp.js');\nconst SoundPlayer = require('./soundplayer');\n\n// AddEventListener(\"DOMContentLoaded\", () => {\n\tconsole.log('Starting connection...');\nconst connection = new TCPConnection();\nconsole.log('Creating handler...');\nconst game = new ChatMud(connection);\n// });\n"]}