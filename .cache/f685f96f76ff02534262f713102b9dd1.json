{"dependencies":[{"name":"/Users/ghorthalon/code/chatmud-client/package.json","includedInParent":true,"mtime":1523198551366}],"generated":{"js":"\"use strict\";const t=require(\"net\"),e=require(\"eventemitter3\");class s extends e{constructor(e=\"chatmud.com\",s=3e3){console.log(\"Connecting to \"+e+\" on port \"+s),super(),this.address=e,this.port=s,this.client=new t.Socket,this.connection=this.client.connect(this.port,this.address,()=>this.setupEvents())}setupEvents(){console.log(\"Setting up tcp events\"),this.client.on(\"data\",t=>this.handleData(t))}handleData(t){console.log(\"TCP stream: \"+t);let e=t.toString().split(\"\\r\\n\");for(let t of e)this.emit(\"data\",t)}send(t){console.log(\"Sending \"+t),this.client.write(t+\"\\n\")}}module.exports=s;","map":{"mappings":[{"source":"tcp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"tcp.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"tcp.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"tcp.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"tcp.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"tcp.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"tcp.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"tcp.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"tcp.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"tcp.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"tcp.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"tcp.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"tcp.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"tcp.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"tcp.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"tcp.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"tcp.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"tcp.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"tcp.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"tcp.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"tcp.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"tcp.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"tcp.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"tcp.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"tcp.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"tcp.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"tcp.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"tcp.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"tcp.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"tcp.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"tcp.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"tcp.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"tcp.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"tcp.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"tcp.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"tcp.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"tcp.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"tcp.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"tcp.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"tcp.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"tcp.js":"'use strict';\nconst net = require(\"net\");\nconst EventEmitter = require(\"eventemitter3\");\n\nclass TCPConnection extends EventEmitter {\n\tconstructor(address=\"chatmud.com\", port=3000) {\n\t\tconsole.log(\"Connecting to \" + address + \" on port \" + port);\n\t\tsuper();\n\t\tthis.address = address;\n\t\tthis.port = port;\n\t\tthis.client = new net.Socket();\n\t\tthis.connection = this.client.connect(this.port, this.address, () => this.setupEvents());\n\t}\n\t\n\tsetupEvents() {\n\t\tconsole.log(\"Setting up tcp events\");\n\t\tthis.client.on(\"data\", data => this.handleData(data));\n\t\n\t\n\t}\n\t\n\thandleData(data) {\n\t\tconsole.log(\"TCP stream: \" + data);\n\t\tlet string = data.toString();\n\t\tlet arr = string.split(\"\\r\\n\");\n\t\tfor (let i of arr) {\n\t\tthis.emit(\"data\", i);\n\t\t}\n\t\t\n\t}\n\t\n\tsend(string) {\n\t\tconsole.log(\"Sending \" + string);\n\t\tthis.client.write(string + \"\\n\");\n\t}\n\t\n\t\n}\n\nmodule.exports = TCPConnection;"},"lineCount":40}},"hash":"32814080c6bf9d0052800f73a9385895","cacheData":{"env":{}}}